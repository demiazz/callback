{"version":3,"sources":["../src/fileUpload.js"],"names":["options","url","console","warn","isAborted","xhr","XMLHttpRequest","abort","send","files","fileUpload","Promise","resolve","reject","FileList","length","File","formData","FormData","i","append","name","data","Object","keys","forEach","paramKey","onreadystatechange","readyState","status","parseResponse","response","open","headers","key","setRequestHeader","upload","onprogress","e","onProgress","percentComplete","loaded","total","progress","toFixed","result","JSON","parse","responseText","message"],"mappings":"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","file":"fileUpload.js","sourcesContent":["/* eslint-env browser */\n/* eslint-disable prefer-promise-reject-errors */\nimport { getAllResponseHeaders } from './utils'\nimport HttpProviderError from './HttpProviderError'\n\nfunction parseResponse(xhr) {\n  try {\n    return {\n      status: xhr.status,\n      result: JSON.parse(xhr.responseText),\n    }\n  } catch (e) {\n    throw new HttpProviderError(\n      xhr.status,\n      getAllResponseHeaders(xhr),\n      xhr.responseText,\n      e.message\n    )\n  }\n}\n\nexport default function(options) {\n  if (!options.url) {\n    console.warn('upload-controller: you must provide a url')\n    return\n  }\n  this.isAborted = false\n  this.xhr = new XMLHttpRequest()\n  this.abort = function() {\n    this.isAborted = true\n    this.xhr && this.xhr.abort()\n  }\n\n  this.send = function(files) {\n    var fileUpload = this\n    var xhr = this.xhr\n\n    fileUpload.isAborted = false\n\n    return new Promise(function(resolve, reject) {\n      if (\n        files &&\n        (files instanceof FileList || files.length || files instanceof File)\n      ) {\n        var formData = new FormData()\n\n        if (files instanceof FileList || files.length) {\n          for (var i = 0; i < files.length; i++) {\n            formData.append(options.name || 'files', files[i])\n          }\n        } else {\n          formData.append(options.name || 'files', files)\n        }\n\n        if (options.data) {\n          Object.keys(options.data).forEach(function(paramKey) {\n            formData.append(paramKey, options.data[paramKey])\n          })\n        }\n\n        xhr.onreadystatechange = function() {\n          if (xhr.readyState === 4 && xhr.status >= 200 && xhr.status < 300) {\n            resolve(parseResponse(xhr))\n          } else if (xhr.readyState === 4) {\n            var response = parseResponse(xhr)\n\n            response.isAborted = fileUpload.isAborted\n            reject(response)\n          }\n        }\n\n        xhr.open('POST', options.url, true)\n\n        if (options.headers) {\n          Object.keys(options.headers).forEach(function(key) {\n            xhr.setRequestHeader(key, options.headers[key])\n          })\n        }\n\n        xhr.upload.onprogress = function(e) {\n          if (options.onProgress) {\n            var percentComplete = e.loaded / e.total * 100\n            options.onProgress({\n              progress: +percentComplete.toFixed(0),\n            })\n          }\n        }\n\n        xhr.send(formData)\n      } else {\n        reject('Not an instance of a File, File[] or FileList')\n      }\n    })\n  }\n}\n"]}