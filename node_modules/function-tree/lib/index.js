'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.FunctionTree = exports.FunctionTreeError = exports.FunctionTreeExecutionError = undefined;

var _errors = require('./errors');

Object.defineProperty(exports, 'FunctionTreeExecutionError', {
  enumerable: true,
  get: function get() {
    return _errors.FunctionTreeExecutionError;
  }
});
Object.defineProperty(exports, 'FunctionTreeError', {
  enumerable: true,
  get: function get() {
    return _errors.FunctionTreeError;
  }
});
exports.sequence = sequence;
exports.parallel = parallel;

var _FunctionTree = require('./FunctionTree');

Object.defineProperty(exports, 'FunctionTree', {
  enumerable: true,
  get: function get() {
    return _FunctionTree.FunctionTree;
  }
});
Object.defineProperty(exports, 'default', {
  enumerable: true,
  get: function get() {
    return _FunctionTree.FunctionTree;
  }
});

var _primitives = require('./primitives');

function sequence() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  return new (Function.prototype.bind.apply(_primitives.Sequence, [null].concat(args)))();
}

function parallel() {
  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }

  return new (Function.prototype.bind.apply(_primitives.Parallel, [null].concat(args)))();
}
//# sourceMappingURL=index.js.map