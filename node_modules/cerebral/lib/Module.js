'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _utils = require('./utils');

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Module = function Module(controller, path, moduleDescription) {
  _classCallCheck(this, Module);

  var stringPath = path.join('.');
  var moduleStub = {
    controller: controller,
    path: stringPath,
    name: path.slice().pop()
  };

  var module = typeof moduleDescription === 'function' ? moduleDescription(moduleStub) : moduleDescription;

  /* Set initial module state to model */
  controller.getModel().set(path, module.state || {});
  /* Convert arrays to actually runable signals */
  module.signals = Object.keys(module.signals || {}).reduce(function (currentSignals, signalKey) {
    var signal = module.signals[signalKey];
    if (!signal) {
      (0, _utils.throwError)('Signal with name "' + signalKey + '" is undefined. Please check that the signal is set to either an array or a function.');
    }
    currentSignals[signalKey] = {
      signal: signal.signal || signal,
      catch: signal.catch || controller.catch ? new Map([].concat(controller.catch ? [].concat(_toConsumableArray(controller.catch)) : []).concat(signal.catch ? [].concat(_toConsumableArray(signal.catch)) : [])) : null,
      run: function run(payload) {
        controller.runSignal(path.concat(signalKey).join('.'), signal.signal || signal, payload);
      }
    };

    return currentSignals;
  }, {});

  /* Instantiate submodules */
  module.modules = Object.keys(module.modules || {}).reduce(function (registered, moduleKey) {
    registered[moduleKey] = new Module(controller, path.concat(moduleKey), module.modules[moduleKey]);
    return registered;
  }, {});

  return module;
};

exports.default = Module;
//# sourceMappingURL=Module.js.map