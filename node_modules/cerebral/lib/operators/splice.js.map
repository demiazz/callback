{"version":3,"sources":["../../src/operators/splice.js"],"names":["target","args","splice","state","resolve","isTag","Error","spliceArgs","map","value","arg","path","displayName","String","join"],"mappings":";;;;;;kBAAe,UAASA,MAAT,EAA0B;AAAA,oCAANC,IAAM;AAANA,QAAM;AAAA;;AACvC,WAASC,MAAT,OAAoC;AAAA,QAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,QAAXC,OAAW,QAAXA,OAAW;;AAClC,QAAI,CAACA,QAAQC,KAAR,CAAcL,MAAd,EAAsB,OAAtB,CAAL,EAAqC;AACnC,YAAM,IAAIM,KAAJ,CACJ,2EADI,CAAN;AAGD;;AAED,QAAMC,aAAaN,KAAKO,GAAL,CAAS;AAAA,aAAOJ,QAAQK,KAAR,CAAcC,GAAd,CAAP;AAAA,KAAT,CAAnB;;AAEAP,UAAMD,MAAN,eAAaE,QAAQO,IAAR,CAAaX,MAAb,CAAb,4BAAsCO,UAAtC;AACD;;AAEDL,SAAOU,WAAP,wBAAwCC,OAAOb,MAAP,CAAxC,UAA2DC,KACxDO,GADwD,CACpD,eAAO;AACV,WAAOK,OAAOH,GAAP,CAAP;AACD,GAHwD,EAIxDI,IAJwD,CAInD,GAJmD,CAA3D;;AAMA,SAAOZ,MAAP;AACD,C","file":"splice.js","sourcesContent":["export default function(target, ...args) {\n  function splice({ state, resolve }) {\n    if (!resolve.isTag(target, 'state')) {\n      throw new Error(\n        'Cerebral operator.splice: You have to use the STATE TAG as first argument'\n      )\n    }\n\n    const spliceArgs = args.map(arg => resolve.value(arg))\n\n    state.splice(resolve.path(target), ...spliceArgs)\n  }\n\n  splice.displayName = `operator.splice(${String(target)}, ${args\n    .map(arg => {\n      return String(arg)\n    })\n    .join(',')})`\n\n  return splice\n}\n"]}