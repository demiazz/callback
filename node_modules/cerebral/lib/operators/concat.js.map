{"version":3,"sources":["../../src/operators/concat.js"],"names":["target","value","concat","state","resolve","isTag","Error","path","displayName","String"],"mappings":";;;;;;kBAAe,UAASA,MAAT,EAAiBC,KAAjB,EAAwB;AACrC,WAASC,MAAT,OAAoC;AAAA,QAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,QAAXC,OAAW,QAAXA,OAAW;;AAClC,QAAI,CAACA,QAAQC,KAAR,CAAcL,MAAd,EAAsB,OAAtB,CAAL,EAAqC;AACnC,YAAM,IAAIM,KAAJ,CACJ,2EADI,CAAN;AAGD;;AAEDH,UAAMD,MAAN,CAAaE,QAAQG,IAAR,CAAaP,MAAb,CAAb,EAAmCI,QAAQH,KAAR,CAAcA,KAAd,CAAnC;AACD;;AAEDC,SAAOM,WAAP,wBAAwCC,OAAOT,MAAP,CAAxC,UAA2DS,OAAOR,KAAP,CAA3D;;AAEA,SAAOC,MAAP;AACD,C","file":"concat.js","sourcesContent":["export default function(target, value) {\n  function concat({ state, resolve }) {\n    if (!resolve.isTag(target, 'state')) {\n      throw new Error(\n        'Cerebral operator.concat: You have to use the STATE TAG as first argument'\n      )\n    }\n\n    state.concat(resolve.path(target), resolve.value(value))\n  }\n\n  concat.displayName = `operator.concat(${String(target)}, ${String(value)})`\n\n  return concat\n}\n"]}