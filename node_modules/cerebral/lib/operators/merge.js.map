{"version":3,"sources":["../../src/operators/merge.js"],"names":["target","values","merge","state","resolve","isTag","Error","path","map","value","Object","keys","reduce","currentValue","key","displayName","String","join"],"mappings":";;;;;;kBAAe,UAASA,MAAT,EAA4B;AAAA,oCAARC,MAAQ;AAARA,UAAQ;AAAA;;AACzC,WAASC,KAAT,OAAmC;AAAA,QAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,QAAXC,OAAW,QAAXA,OAAW;;AACjC,QAAI,CAACA,QAAQC,KAAR,CAAcL,MAAd,EAAsB,OAAtB,CAAL,EAAqC;AACnC,YAAM,IAAIM,KAAJ,CACJ,0EADI,CAAN;AAGD;;AAEDH,UAAMD,KAAN,eACEE,QAAQG,IAAR,CAAaP,MAAb,CADF,4BAEKC,OAAOO,GAAP,CAAW,iBAAS;AACrB,UAAIJ,QAAQC,KAAR,CAAcI,KAAd,CAAJ,EAA0B;AACxB,eAAOL,QAAQK,KAAR,CAAcA,KAAd,CAAP;AACD;;AAED,aAAOC,OAAOC,IAAP,CAAYF,KAAZ,EAAmBG,MAAnB,CAA0B,UAACC,YAAD,EAAeC,GAAf,EAAuB;AACtDD,qBAAaC,GAAb,IAAoBV,QAAQK,KAAR,CAAcA,MAAMK,GAAN,CAAd,CAApB;;AAEA,eAAOD,YAAP;AACD,OAJM,EAIJ,EAJI,CAAP;AAKD,KAVE,CAFL;AAcD;;AAEDX,QAAMa,WAAN,uBAAsCC,OAAOhB,MAAP,CAAtC,UAAyDC,OACtDO,GADsD,CAClD,iBAAS;AACZ,WAAOQ,OAAOP,KAAP,CAAP;AACD,GAHsD,EAItDQ,IAJsD,CAIjD,GAJiD,CAAzD;;AAMA,SAAOf,KAAP;AACD,C","file":"merge.js","sourcesContent":["export default function(target, ...values) {\n  function merge({ state, resolve }) {\n    if (!resolve.isTag(target, 'state')) {\n      throw new Error(\n        'Cerebral operator.merge: You have to use the STATE TAG as first argument'\n      )\n    }\n\n    state.merge(\n      resolve.path(target),\n      ...values.map(value => {\n        if (resolve.isTag(value)) {\n          return resolve.value(value)\n        }\n\n        return Object.keys(value).reduce((currentValue, key) => {\n          currentValue[key] = resolve.value(value[key])\n\n          return currentValue\n        }, {})\n      })\n    )\n  }\n\n  merge.displayName = `operator.merge(${String(target)}, ${values\n    .map(value => {\n      return String(value)\n    })\n    .join(',')})`\n\n  return merge\n}\n"]}