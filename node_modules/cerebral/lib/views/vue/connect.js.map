{"version":3,"sources":["../../../src/views/vue/connect.js"],"names":["connect","dependencies","component","inject","concat","methods","Object","assign","_cererebral_onUpdate","stateChanges","force","view","updateFromState","$props","getProps","$forceUpdate","existingBeforeMount","beforeMount","args","call","mergeProps","props","controller","cerebral_controller","displayName","name","onUpdate","onMount","keys","forEach","$watch","prop","newVal","oldVal","oldProps","hasUpdate","onPropsUpdate","existingBeforeDestroyed","beforeDestroyed","onUnMount"],"mappings":";;;;;kBAEwBA,O;;AAFxB;;;;;;;;AAEe,SAASA,OAAT,CAAiBC,YAAjB,EAA+BC,SAA/B,EAA0C;AACvDA,YAAUC,MAAV,GAAmBD,UAAUC,MAAV,GACfD,UAAUC,MAAV,CAAiBC,MAAjB,CAAwB,CAAC,qBAAD,CAAxB,CADe,GAEf,CAAC,qBAAD,CAFJ;;AAIAF,YAAUG,OAAV,GAAoBC,OAAOC,MAAP,CAAcL,UAAUG,OAAV,IAAqB,EAAnC,EAAuC;AACzDG,0BAAsB,8BAASC,YAAT,EAAuBC,KAAvB,EAA8B;AAClD,WAAKC,IAAL,CAAUC,eAAV,CAA0BH,YAA1B,EAAwC,KAAKI,MAA7C,EAAqDH,KAArD;AACAJ,aAAOC,MAAP,CAAc,IAAd,EAAoB,KAAKI,IAAL,CAAUG,QAAV,CAAmB,KAAKD,MAAxB,CAApB;AACA,WAAKE,YAAL;AACD;AALwD,GAAvC,CAApB;;AAQA,MAAMC,sBAAsBd,UAAUe,WAAtC;AACAf,YAAUe,WAAV,GAAwB,YAAkB;AAAA;;AAAA,sCAANC,IAAM;AAANA,UAAM;AAAA;;AACxCF,2BAAuBA,oBAAoBG,IAApB,6BAAyB,IAAzB,SAAkCD,IAAlC,EAAvB;;AAEA,SAAKP,IAAL,GAAY,mBAAS;AACnBV,gCADmB;AAEnBmB,kBAAY,IAFO;AAGnBC,aAAO,KAAKR,MAHO;AAInBS,kBAAY,KAAKC,mBAJE;AAKnBC,mBAAatB,UAAUuB,IAAV,IAAkB,QALZ;AAMnBC,gBAAU,KAAKlB;AANI,KAAT,CAAZ;;AASA,SAAKG,IAAL,CAAUgB,OAAV;AACArB,WAAOC,MAAP,CAAc,IAAd,EAAoB,KAAKI,IAAL,CAAUG,QAAV,CAAmB,KAAKD,MAAxB,CAApB;;AAEAP,WAAOsB,IAAP,CAAY,KAAKf,MAAjB,EAAyBgB,OAAzB,CAAiC,gBAAQ;AACvC,YAAKC,MAAL,CAAYC,IAAZ,EAAkB,UAASC,MAAT,EAAiBC,MAAjB,EAAyB;AACzC,YAAMC,WAAW5B,OAAOC,MAAP,CAAc,EAAd,EAAkB,KAAKM,MAAvB,sBAAkCkB,IAAlC,EAAyCE,MAAzC,EAAjB;AACA,YAAME,YAAY,KAAKxB,IAAL,CAAUyB,aAAV,CAAwBF,QAAxB,EAAkC,KAAKrB,MAAvC,CAAlB;;AAEA,YAAIsB,SAAJ,EAAe;AACb7B,iBAAOC,MAAP,CAAc,IAAd,EAAoB,KAAKI,IAAL,CAAUG,QAAV,CAAmB,KAAKD,MAAxB,CAApB;AACA,eAAKE,YAAL;AACD;AACF,OARD;AASD,KAVD;AAWD,GA1BD;;AA4BA,MAAMsB,0BAA0BnC,UAAUoC,eAA1C;AACApC,YAAUoC,eAAV,GAA4B,YAAkB;AAAA,uCAANpB,IAAM;AAANA,UAAM;AAAA;;AAC5CmB,+BAA2BA,wBAAwBlB,IAAxB,iCAA6B,IAA7B,SAAsCD,IAAtC,EAA3B;AACA,SAAKP,IAAL,CAAU4B,SAAV;AACD,GAHD;AAIA,SAAOrC,SAAP;AACD","file":"connect.js","sourcesContent":["import View from '../View'\n\nexport default function connect(dependencies, component) {\n  component.inject = component.inject\n    ? component.inject.concat(['cerebral_controller'])\n    : ['cerebral_controller']\n\n  component.methods = Object.assign(component.methods || {}, {\n    _cererebral_onUpdate: function(stateChanges, force) {\n      this.view.updateFromState(stateChanges, this.$props, force)\n      Object.assign(this, this.view.getProps(this.$props))\n      this.$forceUpdate()\n    },\n  })\n\n  const existingBeforeMount = component.beforeMount\n  component.beforeMount = function(...args) {\n    existingBeforeMount && existingBeforeMount.call(this, ...args)\n\n    this.view = new View({\n      dependencies,\n      mergeProps: null,\n      props: this.$props,\n      controller: this.cerebral_controller,\n      displayName: component.name || 'NoName',\n      onUpdate: this._cererebral_onUpdate,\n    })\n\n    this.view.onMount()\n    Object.assign(this, this.view.getProps(this.$props))\n\n    Object.keys(this.$props).forEach(prop => {\n      this.$watch(prop, function(newVal, oldVal) {\n        const oldProps = Object.assign({}, this.$props, { [prop]: oldVal })\n        const hasUpdate = this.view.onPropsUpdate(oldProps, this.$props)\n\n        if (hasUpdate) {\n          Object.assign(this, this.view.getProps(this.$props))\n          this.$forceUpdate()\n        }\n      })\n    })\n  }\n\n  const existingBeforeDestroyed = component.beforeDestroyed\n  component.beforeDestroyed = function(...args) {\n    existingBeforeDestroyed && existingBeforeDestroyed.call(this, ...args)\n    this.view.onUnMount()\n  }\n  return component\n}\n"]}