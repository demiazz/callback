{"version":3,"sources":["../src/Controller.js"],"names":["getModule","path","modules","pathArray","Array","isArray","split","reduce","currentModule","key","join","splice","length","Controller","config","state","signals","providers","router","devtools","options","getSignal","console","warn","componentDependencyStore","catch","flush","bind","model","module","strictRender","contextProviders","concat","on","execution","funcDetails","isParallel","currentPayload","functionsResolving","window","CEREBRAL_STATE","Object","keys","forEach","set","statePath","init","navigator","test","userAgent","emit","force","changes","updateComponents","Boolean","componentsToRender","getAllUniqueEntities","getUniqueEntities","start","Date","now","updateComponentsMap","component","onUpdate","end","sendComponentsMap","get","name","signal","payload","allowedTypes","run","error","signalPath","signalCatch","index","Map","errorType","signalChain","runSignal","signalKey","pop","undefined","moduleKey","parentModule","provider","push","indexOf","unset"],"mappings":"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","file":"Controller.js","sourcesContent":["import DependencyStore from './DependencyStore'\nimport FunctionTree from 'function-tree'\nimport Module from './Module'\nimport Model from './Model'\nimport {\n  ensurePath,\n  isDeveloping,\n  throwError,\n  isSerializable,\n  forceSerializable,\n  isObject,\n  getProviders,\n  cleanPath,\n} from './utils'\nimport VerifyPropsProvider from './providers/VerifyProps'\nimport StateProvider from './providers/State'\nimport DebuggerProvider from './providers/Debugger'\nimport ControllerProvider from './providers/Controller'\nimport ResolveProvider from './providers/Resolve'\n\nfunction getModule(path, modules) {\n  const pathArray = Array.isArray(path) ? path : path.split('.')\n  return pathArray.reduce((currentModule, key) => {\n    if (!currentModule.modules[key]) {\n      throwError(\n        `The path \"${pathArray.join('.')}\" is invalid, can not find module. Does the path \"${pathArray\n          .splice(0, path.length - 1)\n          .join('.')}\" exist?`\n      )\n    }\n    return currentModule.modules[key]\n  }, modules)\n}\n/*\n  The controller is where everything is attached. The devtools\n  and router is attached directly. Also a top level module is created.\n  The controller creates the function tree that will run all signals,\n  based on top level providers and providers defined in modules\n*/\nclass Controller extends FunctionTree {\n  constructor(config) {\n    super()\n    const {\n      state = {},\n      signals = {},\n      providers = [],\n      modules = {},\n      router,\n      devtools = null,\n      options = {},\n    } = config\n    const getSignal = this.getSignal\n\n    this.getSignal = () => {\n      throwError(\n        'You are grabbing a signal before controller has initialized, please wait for \"initialized\" event'\n      )\n    }\n\n    if (router) {\n      console.warn(`DEPRECATION: the 'router' module should be in modules.`)\n      modules.router = router\n    }\n\n    this.componentDependencyStore = new DependencyStore()\n    this.options = options\n    this.catch = config.catch || null\n    this.flush = this.flush.bind(this)\n    this.devtools = devtools\n    this.model = new Model({}, this.devtools)\n    this.module = new Module(this, [], {\n      state,\n      signals,\n      modules,\n    })\n\n    if (options.strictRender) {\n      console.warn(\n        'DEPRECATION - No need to use strictRender option anymore, it is the only render mode now'\n      )\n    }\n\n    this.contextProviders = [ControllerProvider(this)]\n      .concat(this.devtools ? [DebuggerProvider()] : [])\n      .concat(isDeveloping() ? [VerifyPropsProvider] : [])\n      .concat(StateProvider(), ResolveProvider())\n      .concat(providers.concat(getProviders(this.module)))\n\n    this.on('asyncFunction', (execution, funcDetails) => {\n      if (!funcDetails.isParallel) {\n        this.flush()\n      }\n    })\n    this.on('parallelStart', () => this.flush())\n    this.on(\n      'parallelProgress',\n      (execution, currentPayload, functionsResolving) => {\n        if (functionsResolving === 1) {\n          this.flush()\n        }\n      }\n    )\n    this.on('end', () => this.flush())\n\n    if (typeof window !== 'undefined' && window.CEREBRAL_STATE) {\n      Object.keys(window.CEREBRAL_STATE).forEach(statePath => {\n        this.model.set(statePath.split('.'), window.CEREBRAL_STATE[statePath])\n      })\n    }\n\n    if (this.devtools) {\n      this.devtools.init(this)\n    }\n\n    if (\n      !this.devtools &&\n      isDeveloping() &&\n      typeof navigator !== 'undefined' &&\n      /Chrome/.test(navigator.userAgent)\n    ) {\n      console.warn(\n        'You are not using the Cerebral devtools. It is highly recommended to use it in combination with the debugger: http://cerebraljs.com/docs/get_started/debugger.html'\n      )\n    }\n\n    this.getSignal = getSignal\n\n    this.model.flush()\n\n    this.emit('initialized')\n  }\n  /*\n    Whenever components needs to be updated, this method\n    can be called\n  */\n  flush(force) {\n    const changes = this.model.flush()\n\n    if (!force && !Object.keys(changes).length) {\n      return\n    }\n\n    this.updateComponents(changes, force)\n    this.emit('flush', changes, Boolean(force))\n  }\n  updateComponents(changes, force) {\n    let componentsToRender = []\n\n    if (force) {\n      componentsToRender = this.componentDependencyStore.getAllUniqueEntities()\n    } else {\n      componentsToRender = this.componentDependencyStore.getUniqueEntities(\n        changes\n      )\n    }\n\n    const start = Date.now()\n    componentsToRender.forEach(component => {\n      if (this.devtools) {\n        this.devtools.updateComponentsMap(component)\n      }\n      component.onUpdate(changes, force)\n    })\n    const end = Date.now()\n\n    if (this.devtools && componentsToRender.length) {\n      this.devtools.sendComponentsMap(componentsToRender, changes, start, end)\n    }\n  }\n  /*\n    Conveniance method for grabbing the model\n  */\n  getModel() {\n    return this.model\n  }\n  /*\n    Method called by view to grab state\n  */\n  getState(path) {\n    return this.model.get(ensurePath(cleanPath(path)))\n  }\n  /*\n    Uses function tree to run the array and optional\n    payload passed in. The payload will be checkd\n  */\n  runSignal(name, signal, payload = {}) {\n    if (this.devtools && (!isObject(payload) || !isSerializable(payload))) {\n      console.warn(\n        `You passed an invalid payload to signal \"${name}\". Only serializable payloads can be passed to a signal. The payload has been ignored. This is the object:`,\n        payload\n      )\n      payload = {}\n    }\n\n    if (this.devtools) {\n      payload = Object.keys(payload).reduce((currentPayload, key) => {\n        if (!isSerializable(payload[key], this.devtools.allowedTypes)) {\n          console.warn(\n            `You passed an invalid payload to signal \"${name}\", on key \"${key}\". Only serializable values like Object, Array, String, Number and Boolean can be passed in. Also these special value types:`,\n            this.devtools.allowedTypes\n          )\n\n          return currentPayload\n        }\n\n        currentPayload[key] = forceSerializable(payload[key])\n\n        return currentPayload\n      }, {})\n    }\n\n    this.run(name, signal, payload, error => {\n      if (error) {\n        const signalPath = error.execution.name.split('.')\n        let signalCatch = signalPath.reduce((currentModule, key, index) => {\n          if (index === signalPath.length - 1 && currentModule.signals[key]) {\n            return currentModule.signals[key].catch\n          }\n\n          return currentModule ? currentModule.modules[key] : null\n        }, this.module)\n\n        // if signal doesn't have a catch method and we have a global catch, try using it\n        if (!signalCatch) {\n          if (this.catch instanceof Map) {\n            signalCatch = this.catch\n          } else {\n            throw error\n          }\n        }\n\n        if (signalCatch instanceof Map) {\n          for (let [errorType, signalChain] of signalCatch) {\n            if (error instanceof errorType) {\n              this.runSignal('catch', signalChain, error.payload)\n\n              return\n            }\n          }\n        }\n\n        throw error\n      }\n    })\n  }\n  /*\n    Returns a function which binds the name/path of signal,\n    and the array. This allows view layer to just call it with\n    an optional payload and it will run\n  */\n  getSignal(path) {\n    const pathArray = ensurePath(path)\n    const signalKey = pathArray.pop()\n    const module = pathArray.reduce((currentModule, key) => {\n      return currentModule ? currentModule.modules[key] : undefined\n    }, this.module)\n    const signal = module && module.signals[signalKey]\n\n    if (!signal) {\n      throwError(`There is no signal at path \"${path}\"`)\n    }\n\n    return signal.run\n  }\n  addModule(path, module) {\n    const pathArray = path.split('.')\n    const moduleKey = pathArray.pop()\n    const parentModule = getModule(pathArray, this.module)\n    parentModule.modules[moduleKey] = new Module(this, path.split('.'), module)\n\n    if (module.provider) {\n      this.contextProviders.push(module.provider)\n    }\n\n    this.flush()\n  }\n  removeModule(path) {\n    if (!path) {\n      console.warn('Controller.removeModule requires a Module Path')\n      return null\n    }\n\n    const pathArray = path.split('.')\n    const moduleKey = pathArray.pop()\n    const parentModule = getModule(pathArray, this.module)\n\n    const module = parentModule.modules[moduleKey]\n\n    if (module.provider) {\n      this.contextProviders.splice(\n        this.contextProviders.indexOf(module.provider),\n        1\n      )\n    }\n\n    delete parentModule.modules[moduleKey]\n\n    this.model.unset(path.split('.'))\n\n    this.flush()\n  }\n}\n\nexport default Controller\n"]}