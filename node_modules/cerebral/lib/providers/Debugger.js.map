{"version":3,"sources":["../../src/providers/Debugger.js"],"names":["DebuggerProviderFactory","DebuggerProvider","context","functionDetails","payload","prevPayload","devtools","controller","preventPropsReplacement","Object","keys","forEach","key","Error","execution","name","debugger","send","debuggerData","sendExecutionData","wrapProvider","providerKey","provider","reduce","wrappedProvider","originalFunc","args","method","apply"],"mappings":";;;;;AAAA,SAASA,uBAAT,GAAmC;AACjC,WAASC,gBAAT,CAA0BC,OAA1B,EAAmCC,eAAnC,EAAoDC,OAApD,EAA6DC,WAA7D,EAA0E;AACxE,QAAMC,WAAWJ,QAAQK,UAAR,CAAmBD,QAApC;;AAEA,QAAIA,SAASE,uBAAb,EAAsC;AACpCC,aAAOC,IAAP,CAAYN,OAAZ,EAAqBO,OAArB,CAA6B,eAAO;AAClC,YACEN,eACAO,OAAOP,WADP,IAEAA,YAAYO,GAAZ,MAAqBR,QAAQQ,GAAR,CAHvB,EAIE;AACA,gBAAM,IAAIC,KAAJ,iGAC0FX,QAAQY,SAAR,CAAkBC,IAD5G,8BACyIZ,gBAAgBY,IADzJ,oBAC4KH,GAD5K,oBAAN;AAGD;AACF,OAVD;AAWD;;AAEDV,YAAQc,QAAR,GAAmB;AACjBC,UADiB,gBACZC,YADY,EACE;AACjBZ,iBAASa,iBAAT,CACED,YADF,EAEEhB,OAFF,EAGEC,eAHF,EAIEC,OAJF;AAMD,OARgB;AASjBgB,kBATiB,wBASJC,WATI,EASS;AACxB,YAAMC,WAAWpB,QAAQmB,WAAR,CAAjB;;AAEAnB,gBAAQmB,WAAR,IAAuBZ,OAAOC,IAAP,CACrBY,QADqB,EAErBC,MAFqB,CAGrB,UAACC,eAAD,EAAkBZ,GAAlB,EAA0B;AACxB,cAAMa,eAAeH,SAASV,GAAT,CAArB;;AAEAY,0BAAgBZ,GAAhB,IAAuB,YAAa;AAAA,8CAATc,IAAS;AAATA,kBAAS;AAAA;;AAClCxB,oBAAQc,QAAR,CAAiBC,IAAjB,CAAsB;AACpBU,sBAAWN,WAAX,SAA0BT,GADN;AAEpBc,oBAAMA;AAFc,aAAtB;;AAKA,mBAAOD,aAAaG,KAAb,CAAmBN,QAAnB,EAA6BI,IAA7B,CAAP;AACD,WAPD;;AASA,iBAAOF,eAAP;AACD,SAhBoB,EAiBrB,OAAOF,QAAP,KAAoB,UAApB,GACI,YAAa;AAAA,6CAATI,IAAS;AAATA,gBAAS;AAAA;;AACXxB,kBAAQc,QAAR,CAAiBC,IAAjB,CAAsB;AACpBU,yBAAWN,WADS;AAEpBK,kBAAMA;AAFc,WAAtB;;AAKA,iBAAOJ,SAASM,KAAT,CAAeN,QAAf,EAAyBI,IAAzB,CAAP;AACD,SARL,GASI,EA1BiB,CAAvB;AA4BD;AAxCgB,KAAnB;;AA2CA,WAAOxB,OAAP;AACD;;AAED,SAAOD,gBAAP;AACD;;kBAEcD,uB","file":"Debugger.js","sourcesContent":["function DebuggerProviderFactory() {\n  function DebuggerProvider(context, functionDetails, payload, prevPayload) {\n    const devtools = context.controller.devtools\n\n    if (devtools.preventPropsReplacement) {\n      Object.keys(payload).forEach(key => {\n        if (\n          prevPayload &&\n          key in prevPayload &&\n          prevPayload[key] !== payload[key]\n        ) {\n          throw new Error(\n            `Cerebral Devtools - You have activated the \"preventPropsReplacement\" option and in signal \"${context.execution.name}\", before the action \"${functionDetails.name}\", the key \"${key}\" was replaced`\n          )\n        }\n      })\n    }\n\n    context.debugger = {\n      send(debuggerData) {\n        devtools.sendExecutionData(\n          debuggerData,\n          context,\n          functionDetails,\n          payload\n        )\n      },\n      wrapProvider(providerKey) {\n        const provider = context[providerKey]\n\n        context[providerKey] = Object.keys(\n          provider\n        ).reduce(\n          (wrappedProvider, key) => {\n            const originalFunc = provider[key]\n\n            wrappedProvider[key] = (...args) => {\n              context.debugger.send({\n                method: `${providerKey}.${key}`,\n                args: args,\n              })\n\n              return originalFunc.apply(provider, args)\n            }\n\n            return wrappedProvider\n          },\n          typeof provider === 'function'\n            ? (...args) => {\n                context.debugger.send({\n                  method: `${providerKey}`,\n                  args: args,\n                })\n\n                return provider.apply(provider, args)\n              }\n            : {}\n        )\n      },\n    }\n\n    return context\n  }\n\n  return DebuggerProvider\n}\n\nexport default DebuggerProviderFactory\n"]}